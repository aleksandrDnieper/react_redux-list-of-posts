{"version":3,"sources":["constants/api.ts","store/actionTypes.ts","components/User/User.tsx","store/rootReducer.ts","store/actionCreators.ts","utils/api.ts","utils/dataMappers.ts","store/composeEnhancer.ts","store/store.ts","components/Comment/Comment.tsx","components/CommentList/CommentList.tsx","components/Post/Post.tsx","components/PostList/PostList.tsx","App.tsx","index.tsx","constants/index.ts"],"names":["BASE_URL","POSTS_URL","USERS_URL","COMMENTS_URL","ActionTypes","User","props","user","className","name","email","address","zipcode","street","city","initialState","posts","isLoading","query","error","setPosts","value","type","SET_POSTS","payload","setLoading","SET_LOADING","setError","SET_ERROR","getPosts","state","getLoading","getQuery","getError","getDataFromServer","url","a","fetch","data","json","getUsers","users","getComments","comments","getPostsWithUserAndComments","Promise","all","postsWithUserAndComments","map","post","find","person","id","userId","commentsByUser","filter","article","postId","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","action","SET_QUERY","DELETE_POST","item","DELETE_COMMENT","mapDispatchToProps","deleteCommentThunk","dispatch","Comment","connect","deleteComment","comment","body","handleDelete","useCallback","onClick","CommentList","key","deletePost","Post","deletePostThunk","title","PostList","setQuery","loadData","filteredPosts","console","loadDataTemplate","setQueryTemplate","searchWithDelay","debounce","searchedPosts","useMemo","includes","searchCallback","length","placeholder","onChange","event","target","toLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23271730.chunk.js","sourcesContent":["export const BASE_URL = 'https://jsonplaceholder.typicode.com';\nexport const POSTS_URL = '/posts';\nexport const USERS_URL = '/users';\nexport const COMMENTS_URL = '/comments';\n","export enum ActionTypes {\n  SET_POSTS = 'SET_POSTS',\n  SET_LOADING = 'SET_LOADING',\n  DELETE_POST = 'DELETE_POST',\n  DELETE_COMMENT = 'DELETE_COMMENT',\n  SET_QUERY = 'SET_QUERY',\n  SET_ERROR = 'SET_ERROR',\n}\n","import React, { FC } from 'react';\nimport { UserInterface } from '../../constants';\n\ninterface Props {\n  user: UserInterface;\n}\n\nexport const User: FC<Props> = (props) => {\n  const { user } = props;\n\n  return (\n    <div className=\"user\">\n      <p>Contact info:</p>\n      <p>{`name: ${user.name}, email: ${user.email}`}</p>\n      <p>{`address: ${user.address.zipcode}, ${user.address.street}, ${user.address.city}`}</p>\n    </div>\n  );\n};\n","import { AnyAction } from 'redux';\nimport { State } from '../constants';\nimport { ActionTypes } from './actionTypes';\n\nexport const initialState: State = {\n  posts: [],\n  isLoading: false,\n  query: '',\n  error: false,\n};\nexport const reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case ActionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case ActionTypes.SET_QUERY:\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case ActionTypes.DELETE_POST:\n      return {\n        ...state,\n        posts: [...state.posts].filter(item => item.id !== action.payload),\n      };\n\n    case ActionTypes.DELETE_COMMENT:\n      return {\n        ...state,\n        posts: [...state.posts].map(post => ({\n          ...post,\n          comments: [...post.comments].filter(item => item.id !== action.payload),\n        })),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { PostsWithUserAndComments, State } from '../constants';\nimport { ActionTypes } from './actionTypes';\n\nexport const setPosts = (value: PostsWithUserAndComments[]) => ({\n  type: ActionTypes.SET_POSTS,\n  payload: value,\n});\nexport const setLoading = (value: boolean) => ({\n  type: ActionTypes.SET_LOADING,\n  payload: value,\n});\nexport const deletePost = (value: number) => ({\n  type: ActionTypes.DELETE_POST,\n  payload: value,\n});\nexport const setQuery = (value: string) => ({\n  type: ActionTypes.SET_QUERY,\n  payload: value,\n});\nexport const deleteComment = (value: number) => ({\n  type: ActionTypes.DELETE_COMMENT,\n  payload: value,\n});\nexport const setError = (value: boolean) => ({\n  type: ActionTypes.SET_ERROR,\n  payload: value,\n});\n\nexport const getPosts = (state: State) => state.posts;\nexport const getLoading = (state: State) => state.isLoading;\nexport const getQuery = (state: State) => state.query;\nexport const getError = (state: State) => state.error;\n","import {\n  BASE_URL,\n  CommentInterface,\n  COMMENTS_URL,\n  PostInterface,\n  POSTS_URL,\n  UserInterface,\n  USERS_URL,\n} from '../constants';\n\nconst getDataFromServer = async <T>(url: string): Promise<T> => {\n  const data = await fetch(`${BASE_URL}${url}`);\n\n  return data.json();\n};\n\nexport const getUsers: () => Promise<UserInterface[]> = async () => {\n  const users = await getDataFromServer<UserInterface[]>(USERS_URL);\n\n  return users;\n};\n\nexport const getComments: () => Promise<CommentInterface[]> = async () => {\n  const comments = await getDataFromServer<CommentInterface[]>(COMMENTS_URL);\n\n  return comments;\n};\n\nexport const getPosts: () => Promise<PostInterface[]> = async () => {\n  const posts = await getDataFromServer<PostInterface[]>(POSTS_URL);\n\n  return posts;\n};\n","import {\n  CommentInterface,\n  PostInterface,\n  PostsWithUserAndComments,\n  UserInterface,\n} from '../constants';\nimport { getComments, getPosts, getUsers } from './api';\n\nexport const getPostsWithUserAndComments: () => Promise<PostsWithUserAndComments[]> = async () => {\n  const [users, comments, posts] = await Promise.all([\n    getUsers(),\n    getComments(),\n    getPosts(),\n  ]);\n\n  const postsWithUserAndComments = posts.map((post: PostInterface) => {\n    const user = users\n      .find((person: UserInterface) => person.id === post.userId) as UserInterface;\n    const commentsByUser = comments\n      .filter((article: CommentInterface) => article.postId === post.id) as CommentInterface[];\n\n    return {\n      ...post,\n      user,\n      comments: commentsByUser,\n    };\n  });\n\n  return postsWithUserAndComments;\n};\n\nexport function searchCallback(query: string) {\n  return (post: PostsWithUserAndComments) => post.title.includes(query)\n    || post.body.includes(query);\n}\n","import { compose } from 'redux';\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport const composeEnhancers = (\n  process.env.NODE_ENV === 'development'\n  && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n)\n  ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    trace: true,\n  })\n  : compose;\n","import { applyMiddleware, createStore, Dispatch } from 'redux';\nimport thunk from 'redux-thunk';\nimport { initialState, reducer } from './rootReducer';\nimport {\n  deleteComment,\n  setError,\n  setLoading,\n  setPosts,\n} from './actionCreators';\nimport { getPostsWithUserAndComments } from '../utils';\nimport { composeEnhancers } from './composeEnhancer';\n\n// thunk\nexport const loadData = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(setError(false));\n      dispatch(setLoading(true));\n      const filteredPosts = await getPostsWithUserAndComments();\n\n      dispatch(setPosts(filteredPosts));\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n\n      dispatch(setError(true));\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n};\n\nexport const deleteCommentThunk = (id: number) => (dispatch: Dispatch) => {\n  dispatch(deleteComment(id));\n};\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  enhancer,\n);\n","import React, { FC, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteCommentThunk } from '../../store/store';\nimport { CommentInterface } from '../../constants';\n\ninterface Props {\n  comment: CommentInterface;\n  deleteCommentThunk: (value: number) => void;\n}\n\nexport const CommentTemplate: FC<Props> = (props) => {\n  const { deleteCommentThunk: deleteComment } = props;\n  const {\n    name,\n    body,\n    email,\n    id,\n  } = props.comment;\n\n  const handleDelete = useCallback(() => deleteComment(id),\n    [id, deleteComment]);\n\n\n  return (\n    <div className=\"card text-white bg-info mb-3\">\n      <h3 className=\"card-header\">\n        {name}\n      </h3>\n      <div className=\"card-body\">\n        <blockquote className=\"blockquote mb-0\">\n          <p>\n            {body}\n          </p>\n          <footer className=\"blockquote-footer\">\n            {email}\n          </footer>\n        </blockquote>\n      </div>\n      <button\n        type=\"button\"\n        className=\"btn btn-light\"\n        onClick={handleDelete}\n      >\n        Delete comment\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  deleteCommentThunk,\n};\n\nexport const Comment = connect(null, mapDispatchToProps)(CommentTemplate);\n","import React, { FC } from 'react';\nimport { Comment } from '../Comment/Comment';\nimport { CommentInterface } from '../../constants';\n\ninterface Props {\n  comments: CommentInterface[];\n}\n\nexport const CommentList: FC<Props> = (props) => {\n  const { comments } = props;\n\n  return (\n    <div className=\"commentList\">\n      <div className=\"comments\">\n        {\n          comments.map(comment => (\n            <Comment key={comment.id} comment={comment} />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { PostsWithUserAndComments } from '../../constants';\nimport { User } from '../User/User';\nimport { CommentList } from '../CommentList/CommentList';\nimport { deletePost } from '../../store/actionCreators';\n\ninterface Props {\n  post: PostsWithUserAndComments;\n  deletePost: (value: number) => void;\n}\n\nexport const PostTemplate: FC<Props> = (props) => {\n  const { deletePost: deletePostThunk } = props;\n  const {\n    title,\n    body,\n    id,\n    user,\n    comments,\n  } = props.post;\n\n  const handleDelete = useCallback(() => deletePostThunk(id),\n    [id, deletePostThunk]);\n\n  return (\n    <div className=\"list__item\">\n      <div className=\"card\">\n        <h4 className=\"card-header\">{title}</h4>\n        <div className=\"card-body\">\n\n          <blockquote className=\"blockquote mb-0\">\n            <p>\n              {body}\n            </p>\n            <footer className=\"blockquote-footer\">\n              <User user={user} />\n            </footer>\n          </blockquote>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={handleDelete}\n          >\n            Delete post\n          </button>\n          <CommentList comments={comments} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = { deletePost };\n\nexport const Post = connect(null, mapDispatchToProps)(PostTemplate);\n","import React, { FC } from 'react';\nimport { PostsWithUserAndComments } from '../../constants';\nimport { Post } from '../Post/Post';\n\ninterface Props {\n  posts: PostsWithUserAndComments[];\n}\n\nexport const PostList: FC<Props> = (props) => {\n  const { posts } = props;\n\n  return (\n    <div className=\"list\">\n      {\n        posts.map((post) => <Post key={post.id} post={post} />)\n      }\n    </div>\n  );\n};\n","import React, {\n  FC,\n  useCallback,\n  useMemo,\n} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport debounce from 'lodash/debounce';\nimport { connect } from 'react-redux';\nimport {\n  PostsWithUserAndComments,\n  State,\n} from './constants';\nimport { PostList } from './components/PostList/PostList';\nimport { loadData } from './store/store';\nimport {\n  getError,\n  getLoading,\n  getPosts,\n  getQuery,\n  setLoading,\n  setPosts,\n  setQuery,\n} from './store/actionCreators';\nimport { searchCallback } from './utils';\n\ninterface Props {\n  posts: PostsWithUserAndComments[];\n  setPosts: (value: PostsWithUserAndComments[]) => void;\n  setLoading: (value: boolean) => void;\n  isLoading: boolean;\n  setQuery: (value: string) => void;\n  query: string;\n  loadData: () => void;\n  error: boolean;\n}\n\nconst App: FC<Props> = (props) => {\n  const {\n    query,\n    posts,\n    error,\n    isLoading,\n    loadData: loadDataTemplate,\n    setQuery: setQueryTemplate,\n  } = props;\n\n  const handleStart = () => {\n    loadDataTemplate();\n  };\n\n  const searchWithDelay = useCallback(\n    debounce(setQueryTemplate, 1000),\n    [],\n  );\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    searchWithDelay(value.toLowerCase());\n  };\n\n  const searchedPosts = useMemo(() => posts\n    .filter(searchCallback(query)), [posts, query]);\n\n  return (\n    <div className=\"app\">\n      {!props.posts.length\n        ? (\n          <>\n            <h1>Dynamic list of posts</h1>\n            {error && (<p className=\"text-danger\">Error occured</p>)}\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleStart}\n            >\n              {isLoading ? 'Loading.......' : 'Start load'}\n            </button>\n          </>\n        )\n        : (\n          <>\n            <input\n              type=\"text\"\n              id=\"input\"\n              className=\"form-control\"\n              placeholder=\"type search\"\n              onChange={handleSearch}\n            />\n            <PostList posts={query ? searchedPosts : posts} />\n          </>\n        )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  setLoading,\n  setPosts,\n  setQuery,\n  loadData,\n};\n\nconst mapStateToProps = (state: State) => ({\n  posts: getPosts(state),\n  isLoading: getLoading(state),\n  query: getQuery(state),\n  error: getError(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","export * from './api';\nexport * from './types';\n"],"sourceRoot":""}